/*	==================================================
	Pet View
	==================================================  */
.container-pet {
  display: -moz-inline-stack;
  display: inline-block;
  vertical-align: top;
  *vertical-align: auto;
  zoom: 1;
  *display: inline;
  width: 25em;
  min-width: 33.33333%;
  text-align: center; }
  .container-pet .wrap-pet-photo {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
    max-width: 12.5em;
    width: 100%;
    padding-bottom: 1em; }
  .container-pet .pet-photo {
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    border-radius: 50%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: url("http://placehold.it/960x960");
    -webkit-background-image: url("http://placehold.it/960x960");
    -moz-background-image: url("http://placehold.it/960x960");
    -o-background-image: url("http://placehold.it/960x960");
    background-image: url("http://placehold.it/960x960");
    display: block;
    height: 0;
    margin: 0 auto;
    padding-bottom: 100%;
    position: relative;
    width: 100%;
    overflow: hidden;
    width: 100%; }
  .container-pet .pet-info p {
    margin: 0 auto; }
  .container-pet .wrap-pet-info-size,
  .container-pet .wrap-pet-info-sex,
  .container-pet .wrap-pet-info-breed {
    padding-bottom: 0.75em; }
  .container-pet .btn-more-info {
    background-color: #d8d8d8;
    border: 0;
    padding: 0.5em;
    text-decoration: none; }

/*	==================================================
	Pet List View
	==================================================  */
.wrap-search-results {
  text-align: center; }

/*	==================================================
	Search
	==================================================  */
.container-search {
  font-family: sans-serif; }
  .container-search,
  .container-search * {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }
  .container-search .wrap-search-cta {
    background-color: #828282;
    padding: 0.75em 1.875%; }
  .container-search .search-cta {
    color: #fff;
    margin: 0 auto;
    text-align: center; }
  .container-search .wrap-search {
    font-family: sans-serif;
    background-color: #323232;
    color: #fff; }
  .container-search .wrap-image,
  .container-search .wrap-instructions,
  .container-search .wrap-search-fields {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
    padding: 1.5em 1.875%;
    width: 33.33333%; }
  .container-search .wrap-image {
    text-align: center; }
  .container-search .image {
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    border-radius: 50%;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    background-image: url("http://placehold.it/960x960");
    -webkit-background-image: url("http://placehold.it/960x960");
    -moz-background-image: url("http://placehold.it/960x960");
    -o-background-image: url("http://placehold.it/960x960");
    background-image: url("http://placehold.it/960x960");
    display: block;
    height: 0;
    margin: 0 auto;
    padding-bottom: 100%;
    position: relative;
    width: 100%;
    overflow: hidden;
    width: 100%; }
  .container-search .wrap-instructions {
    padding-left: 0;
    padding-right: 0; }
    .container-search .wrap-instructions h5 {
      margin: 0 auto .5em;
      text-align: center; }
  .container-search .search {
    display: -moz-inline-stack;
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    zoom: 1;
    *display: inline; }
  .container-search .wrap-advanced-options-toggle {
    padding-bottom: 0.75em; }
  .container-search .advanced-options-toggle {
    background-color: #828282;
    color: #fff;
    display: block;
    padding: 0.75em;
    text-align: center; }
  .container-search .wrap-advance-options-view {
    -webkit-transition-property: max-height;
    -moz-transition-property: max-height;
    -o-transition-property: max-height;
    transition-property: max-height;
    -webkit-transition-duration: 400ms;
    -moz-transition-duration: 400ms;
    -o-transition-duration: 400ms;
    transition-duration: 400ms;
    -webkit-transition-timing-function: ease;
    -moz-transition-timing-function: ease;
    -o-transition-timing-function: ease;
    transition-timing-function: ease;
    max-height: 0;
    overflow: hidden; }
  .container-search .advanced-options-view {
    padding-bottom: 0.75em; }
  .container-search .wrap-input {
    padding-bottom: 0.75em; }
    .container-search .wrap-input:first-child {
      padding-top: 0; }
    .container-search .wrap-input:last-child {
      padding-bottom: 0; }
  .container-search select {
    background-color: #fff;
    border: 0;
    display: block;
    padding: 0.75em;
    text-align: center;
    width: 100%; }
  .container-search option {
    text-align: center; }
  .container-search input[type='submit'] {
    display: block;
    background-color: #828282;
    padding: 0.75em;
    text-align: center;
    width: 100%; }
  .container-search.advanced-view .wrap-advance-options-view {
    max-height: 45em;
    overflow: hidden; }
  @media (max-width: 768px) {
    .container-search .wrap-image,
    .container-search .wrap-instructions,
    .container-search .wrap-search-fields {
      display: block;
      padding: .75em 1.5em;
      width: 100%; }
    .container-search .wrap-image {
      padding-top: 1.5em; }
    .container-search .wrap-search-fields {
      padding: 0; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZXdzL19wZXQuc2NzcyIsImNvbXBhc3MtbWl4aW5zL2NvbXBhc3MvY3NzMy9faW5saW5lLWJsb2NrLnNjc3MiLCJoZWxwZXJzL19mdW5jdGlvbnMuc2NzcyIsImNvbXBhc3MtbWl4aW5zL2NvbXBhc3MvY3NzMy9fc2hhcmVkLnNjc3MiLCJoZWxwZXJzL19taXhpbnMuc2NzcyIsImhlbHBlcnMvX3ZhcmlhYmxlcy5zY3NzIiwidmlld3MvX3BldC1saXN0LnNjc3MiLCJ2aWV3cy9fc2VhcmNoLnNjc3MiLCJjb21wYXNzLW1peGlucy9jb21wYXNzL2NzczMvX2JveC1zaXppbmcuc2NzcyIsImNvbXBhc3MtbWl4aW5zL2NvbXBhc3MvY3NzMy9fdHJhbnNpdGlvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzt1REFFdUQ7QUFFdkQsY0FBYyxDQUFBO0VDTVYsT0FBTyxFQUFFLGlCQUFrQjtFQUU3QixPQUFPLEVBQUUsWUFBYTtFQUVwQixjQUFjLEVEVE0sR0FBRztFQ1l2QixlQUFlLEVBQUUsSUFBSztFQUN0QixJQUFJLEVBQUUsQ0FBRTtFQUNSLFFBQVEsRUFBRSxNQUFPO0VEYm5CLEtBQUssRUUwQ0ssSUFBUTtFRnpDbEIsU0FBUyxFQUFHLFNBQUk7RUFDaEIsVUFBVSxFQUFFLE1BQU8sR0F1RXBCO0VBM0VELGNBQWMsQ0FvQlosZUFBZSxDQUFBO0lDZGIsT0FBTyxFQUFFLGlCQUFrQjtJQUU3QixPQUFPLEVBQUUsWUFBYTtJQUVwQixjQUFjLEVBVE8sTUFBTTtJQVkzQixlQUFlLEVBQUUsSUFBSztJQUN0QixJQUFJLEVBQUUsQ0FBRTtJQUNSLFFBQVEsRUFBRSxNQUFPO0lET2pCLFNBQVMsRUVzQkQsTUFBUTtJRnJCaEIsS0FBSyxFQUFFLElBQUs7SUFDWixjQUFjLEVBQUUsR0FBSSxHQUNyQjtFQXpCSCxjQUFjLENBMEJaLFVBQVUsQ0FBQTtJR2hCNkMscUJBQW9CLEVDMFBwRCxHQUFHO0lEeFBnQyxrQkFBaUIsRUN3UHBELEdBQUc7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QyxNQUFRO0lLa0ZoQixVQUFVLEVBQUUsTUFBTztJQUNuQixLQUFLLEVBQUUsSUFBSyxHQUNiO0VBaElILGlCQUFpQixBQXNJZCxjQUFjLENBQ2IsMEJBQTBCLENBQUM7SUFDekIsVUFBVSxFTDVGSixJQUFRO0lLNkZkLFFBQVEsRUFBRSxNQUFPLEdBQ2xCO0VBR0gsTUFBTSxFQUFMLFNBQVMsRUFBQyxLQUFLO0lBN0lsQixpQkFBaUIsQ0ErSWIsV0FBVztJQS9JZixpQkFBaUIsQ0FnSmIsa0JBQWtCO0lBaEp0QixpQkFBaUIsQ0FpSmIsbUJBQW1CLENBQUM7TUFDbEIsT0FBTyxFQUFFLEtBQU07TUFDZixPQUFPLEVBQUUsV0FBWTtNQUNyQixLQUFLLEVBQUUsSUFBSyxHQUNiO0lBckpMLGlCQUFpQixDQXVKYixXQUFXLENBQUM7TUFDVixXQUFXLEVBQUUsS0FBTSxHQUNwQjtJQXpKTCxpQkFBaUIsQ0EySmIsbUJBQW1CLENBQUM7TUFDbEIsT0FBTyxFQUFFLENBQUUsR0FDWiIsImZpbGUiOiJwZXQtYWRvcHRpb24uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdFBldCBWaWV3XG5cdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICAqL1xuJHBhZGRpbmctcGV0LWluZm8tcHgtc2FuczogMTI7XG4uY29udGFpbmVyLXBldHtcbiAgQGluY2x1ZGUgaW5saW5lLWJsb2NrKHRvcCk7XG4gIHdpZHRoOiBlbSg0MDApO1xuICBtaW4td2lkdGg6ICgxMDAlIC8zKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gIC53cmFwLXBldHtcblxuICB9XG4gIC5wZXR7XG5cbiAgfVxuICAud3JhcC1wZXQtbmFtZXtcblxuXG4gIH1cbiAgLnBldC1uYW1le1xuXG5cbiAgfVxuICAud3JhcC1wZXQtcGhvdG97XG4gICAgQGluY2x1ZGUgaW5saW5lLWJsb2NrKCk7XG4gICAgbWF4LXdpZHRoOiBlbSgyMDApO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctYm90dG9tOiAxZW07XG4gIH1cbiAgLnBldC1waG90b3tcbiAgICBAaW5jbHVkZSBwZXQtcGhvdG8oKTtcblxuICB9XG4gIC53cmFwLXBldC1pbmZve1xuXG5cbiAgfVxuICAucGV0LWluZm97XG4gICAgcCB7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG5cbiAgfVxuICAud3JhcC1wZXQtaW5mby1zaXplLFxuICAud3JhcC1wZXQtaW5mby1zZXgsXG4gIC53cmFwLXBldC1pbmZvLWJyZWVke1xuICAgIHBhZGRpbmctYm90dG9tOiBlbSgkcGFkZGluZy1wZXQtaW5mby1weC1zYW5zKTtcblxuXG4gIH1cbiAgLnBldC1pbmZvLWJyZWVke1xuXG5cbiAgfVxuICAud3JhcC1wZXQtaW5mby1zaXple1xuXG5cbiAgfVxuICAucGV0LWluZm8tc2l6ZXtcblxuXG4gIH1cbiAgLndyYXAtcGV0LWluZm8tc2V4e1xuXG5cbiAgfVxuICAucGV0LWluZm8tc2V4e1xuXG5cbiAgfVxuXG4gIC5idG4tbW9yZS1pbmZvIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItbGlnaHQtZ3JleTtcbiAgICBib3JkZXI6IDA7XG4gICAgcGFkZGluZzogZW0oOCk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG5cbn1cbiIsIkBpbXBvcnQgXCJzaGFyZWRcIjtcblxuLy8gU2V0IGAkaW5saW5lLWJsb2NrLWFsaWdubWVudGAgdG8gYG5vbmVgIG9yIGBmYWxzZWAgdG8gZGlzYWJsZSB0aGUgb3V0cHV0XG4vLyBvZiBhIHZlcnRpY2FsLWFsaWduIHByb3BlcnR5IGluIHRoZSBpbmxpbmUtYmxvY2sgbWl4aW4uXG4vLyBPciBzZXQgaXQgdG8gYSBsZWdhbCB2YWx1ZSBmb3IgYHZlcnRpY2FsLWFsaWduYCB0byBjaGFuZ2UgdGhlIGRlZmF1bHQuXG4kaW5saW5lLWJsb2NrLWFsaWdubWVudDogbWlkZGxlICFkZWZhdWx0O1xuXG4vLyBQcm92aWRlcyBhIGNyb3NzLWJyb3dzZXIgbWV0aG9kIHRvIGltcGxlbWVudCBgZGlzcGxheTogaW5saW5lLWJsb2NrO2BcbkBtaXhpbiBpbmxpbmUtYmxvY2soJGFsaWdubWVudDogJGlubGluZS1ibG9jay1hbGlnbm1lbnQpIHtcbiAgQGlmICRsZWdhY3ktc3VwcG9ydC1mb3ItbW96aWxsYSB7XG4gICAgZGlzcGxheTogLW1vei1pbmxpbmUtc3RhY2s7XG4gIH1cbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBAaWYgJGFsaWdubWVudCBhbmQgJGFsaWdubWVudCAhPSBub25lIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogJGFsaWdubWVudDtcbiAgfVxuICBAaWYgJGxlZ2FjeS1zdXBwb3J0LWZvci1pZSB7XG4gICAgKnZlcnRpY2FsLWFsaWduOiBhdXRvO1xuICAgIHpvb206IDE7XG4gICAgKmRpc3BsYXk6IGlubGluZTtcbiAgfVxufVxuIiwiQGltcG9ydCBcInZhcmlhYmxlc1wiO1xyXG5AZnVuY3Rpb24gZGVjLXRvLWhleCgkZCkge1xyXG4gICRoZXhWYWxzOiBcIkFcIiBcIkJcIiBcIkNcIiBcIkRcIiBcIkVcIiBcIkZcIjtcclxuICAkYmFzZTogMTY7XHJcbiAgJHF1b3RpZW50OiAkZDtcclxuICAkcmVzdWx0OiBcIlwiO1xyXG4gIEBpZiAkZCA9PSAwIHtcclxuICAgICRyZXN1bHQ6IFwiMDBcIjtcclxuICB9XHJcbiAgQHdoaWxlICRxdW90aWVudCAhPSAwIHtcclxuICAgICRtb2Q6ICRxdW90aWVudCAlICRiYXNlO1xyXG4gICAgJHF1b3RpZW50OiBmbG9vcigkcXVvdGllbnQgLyAkYmFzZSk7XHJcbiAgICBAaWYgJG1vZCA+IDkge1xyXG4gICAgICAkbW9kOiBudGgoJGhleFZhbHMsICRtb2QgLSA5KTtcclxuICAgIH1cclxuICAgIEBpZiAkZCA8ICRiYXNlIHtcclxuICAgICAgJHJlc3VsdDogXCIwXCIgKyAkbW9kO1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgICRyZXN1bHQ6ICRtb2QgKyAkcmVzdWx0O1xyXG4gICAgfVxyXG4gIH1cclxuICBAcmV0dXJuICRyZXN1bHQ7XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBoZXgtdG8tY2hhcigkaGV4KXtcclxuICAkZm9vOiA4MztcclxuICAkd2l0aHNsYXNoOiBcIlxcXCJcXFxcI3tkZWMtdG8taGV4KCRoZXgpfVxcXCJcIjtcclxuICBAcmV0dXJuIHVucXVvdGUoJHdpdGhzbGFzaCk7XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBzdHJpcC11bml0cygkbnVtYmVyKSB7XHJcbiAgQHJldHVybiAkbnVtYmVyIC8gKCRudW1iZXIgKiAwICsgMSk7XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBlbS1zYW5zKCRweC1zaXplLCAkZGVmYXVsdC1zaXplOiAkZm9udC1zaXplLWJvZHktZGVmYXVsdC1weC1zYW5zKXtcclxuICAkZW0tc2l6ZTogc3RyaXAtdW5pdHMoJHB4LXNpemUpL3N0cmlwLXVuaXRzKCRkZWZhdWx0LXNpemUpO1xyXG4gIEByZXR1cm4gJGVtLXNpemU7XHJcbn1cclxuXHJcbkBmdW5jdGlvbiBlbSgkcHgtc2l6ZSwgJGFkanVzdGVkLXB4LXNpemU6IGZhbHNlLCAkZGVmYXVsdC1zaXplOiAkZm9udC1zaXplLWJvZHktZGVmYXVsdC1weC1zYW5zKXtcclxuICAkc3RyaXBwZWQtcHgtc2l6ZTogc3RyaXAtdW5pdHMoJHB4LXNpemUpO1xyXG4gICRzdHJpcHBlZC1kZWZhdWx0LXB4LXNpemU6IHN0cmlwLXVuaXRzKCRweC1zaXplKTtcclxuICAkZW0tc2l6ZTogJHN0cmlwcGVkLXB4LXNpemUgLyAkZGVmYXVsdC1zaXplO1xyXG4gIEBpZiAoJGFkanVzdGVkLXB4LXNpemUpe1xyXG4gICAgJHN0cmlwcGVkLWRlZmF1bHQtcHgtc2l6ZTogc3RyaXAtdW5pdHMoJGFkanVzdGVkLXB4LXNpemUpO1xyXG4gICAgJGVtLWFkanVzdGVkLXNpemU6ICRzdHJpcHBlZC1weC1zaXplIC8gJHN0cmlwcGVkLWRlZmF1bHQtcHgtc2l6ZTtcclxuICAgIEByZXR1cm4gJGVtLWFkanVzdGVkLXNpemUgKiAxZW07XHJcbiAgfSBAZWxzZXtcclxuICAgIEByZXR1cm4gJGVtLXNpemUgKiAxZW07XHJcbiAgfVxyXG59XHJcblxyXG5AZnVuY3Rpb24gcGVyY2VudCgkdmFsdWVzLi4uKXtcclxuICBAaWYobGVuZ3RoKCR2YWx1ZXMpID09IDEpe1xyXG4gICAgQHJldHVybiAoMTAwJSAqIG50aCgkdmFsdWVzLCAxKSk7XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAcmV0dXJuICgxMDAlICogKG50aCgkdmFsdWVzLCAxKS9udGgoJHZhbHVlcywgMikpKTtcclxuICB9XHJcbn0iLCJAaW1wb3J0IFwiLi4vc3VwcG9ydFwiO1xuXG4vLyBUaGlzIG1peGluIHByb3ZpZGVzIGJhc2ljIHN1cHBvcnQgZm9yIENTUzMgcHJvcGVydGllcyBhbmRcbi8vIHRoZWlyIGNvcnJlc3BvbmRpbmcgZXhwZXJpbWVudGFsIENTUzIgcHJvcGVydGllcyB3aGVuXG4vLyB0aGUgaW1wbGVtZW50YXRpb25zIGFyZSBpZGVudGljYWwgZXhjZXB0IGZvciB0aGUgcHJvcGVydHlcbi8vIHByZWZpeC5cbkBtaXhpbiBleHBlcmltZW50YWwoJHByb3BlcnR5LCAkdmFsdWUsXG4gICRtb3ogICAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbW96aWxsYSxcbiAgJHdlYmtpdCAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci13ZWJraXQsXG4gICRvICAgICAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itb3BlcmEsXG4gICRtcyAgICAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbWljcm9zb2Z0LFxuICAka2h0bWwgICAgOiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLWtodG1sLFxuICAkb2ZmaWNpYWwgOiB0cnVlXG4pIHtcbiAgQGlmICR3ZWJraXQgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLXdlYmtpdCAgICB7IC13ZWJraXQtI3skcHJvcGVydHl9IDogJHZhbHVlOyB9XG4gIEBpZiAka2h0bWwgICBhbmQgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1raHRtbCAgICAgeyAgLWtodG1sLSN7JHByb3BlcnR5fSA6ICR2YWx1ZTsgfVxuICBAaWYgJG1veiAgICAgYW5kICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbW96aWxsYSAgIHsgICAgLW1vei0jeyRwcm9wZXJ0eX0gOiAkdmFsdWU7IH1cbiAgQGlmICRtcyAgICAgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW1pY3Jvc29mdCB7ICAgICAtbXMtI3skcHJvcGVydHl9IDogJHZhbHVlOyB9XG4gIEBpZiAkbyAgICAgICBhbmQgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1vcGVyYSAgICAgeyAgICAgIC1vLSN7JHByb3BlcnR5fSA6ICR2YWx1ZTsgfVxuICBAaWYgJG9mZmljaWFsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgICAgICAgICAjeyRwcm9wZXJ0eX0gOiAkdmFsdWU7IH1cbn1cblxuLy8gU2FtZSBhcyBleHBlcmltZW50YWwoKSwgYnV0IGZvciBjYXNlcyB3aGVuIHRoZSBwcm9wZXJ0eSBpcyB0aGUgc2FtZSBhbmQgdGhlIHZhbHVlIGlzIHZlbmRvcml6ZWRcbkBtaXhpbiBleHBlcmltZW50YWwtdmFsdWUoJHByb3BlcnR5LCAkdmFsdWUsXG4gICRtb3ogICAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbW96aWxsYSxcbiAgJHdlYmtpdCAgIDogJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci13ZWJraXQsXG4gICRvICAgICAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itb3BlcmEsXG4gICRtcyAgICAgICA6ICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbWljcm9zb2Z0LFxuICAka2h0bWwgICAgOiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLWtodG1sLFxuICAkb2ZmaWNpYWwgOiB0cnVlXG4pIHtcbiAgQGlmICR3ZWJraXQgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLXdlYmtpdCAgICB7ICN7JHByb3BlcnR5fSA6IC13ZWJraXQtI3skdmFsdWV9OyB9XG4gIEBpZiAka2h0bWwgICBhbmQgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1raHRtbCAgICAgeyAjeyRwcm9wZXJ0eX0gOiAgLWtodG1sLSN7JHZhbHVlfTsgfVxuICBAaWYgJG1veiAgICAgYW5kICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItbW96aWxsYSAgIHsgI3skcHJvcGVydHl9IDogICAgLW1vei0jeyR2YWx1ZX07IH1cbiAgQGlmICRtcyAgICAgIGFuZCAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW1pY3Jvc29mdCB7ICN7JHByb3BlcnR5fSA6ICAgICAtbXMtI3skdmFsdWV9OyB9XG4gIEBpZiAkbyAgICAgICBhbmQgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1vcGVyYSAgICAgeyAjeyRwcm9wZXJ0eX0gOiAgICAgIC1vLSN7JHZhbHVlfTsgfVxuICBAaWYgJG9mZmljaWFsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgI3skcHJvcGVydHl9IDogICAgICAgICAjeyR2YWx1ZX07IH1cbn1cbiIsIkBpbXBvcnQgXCJ2YXJpYWJsZXNcIjtcclxuQGltcG9ydCBcImZ1bmN0aW9uc1wiO1xyXG5cclxuXHJcbkBtaXhpbiBiYWNrZ3JvdW5kLWltYWdlLXN1cHBvcnQoJGJnLWltYWdlLXByb3Ape1xyXG4gIC13ZWJraXQtYmFja2dyb3VuZC1pbWFnZTogJGJnLWltYWdlLXByb3A7XHJcbiAgLW1vei1iYWNrZ3JvdW5kLWltYWdlOiAkYmctaW1hZ2UtcHJvcDtcclxuICAtby1iYWNrZ3JvdW5kLWltYWdlOiAkYmctaW1hZ2UtcHJvcDtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiAkYmctaW1hZ2UtcHJvcDtcclxufVxyXG5cclxuQG1peGluIHBzZXVkby1tZW51KCR3aWR0aC1wc2V1ZG8tbWVudS1lbTogM2VtLCAkaGVpZ2h0LXBzZXVkby1tZW51LWVtOiAxZW0sICRjb2xvci1tZW51LWJhcjogIzAwMCkge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAkYWRqdXN0ZWQtaGVpZ2h0OiAkaGVpZ2h0LXBzZXVkby1tZW51LWVtICowLjg7XHJcblxyXG4gICY6YmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBAY29udGVudDtcclxuICAgIHdpZHRoOiAkd2lkdGgtcHNldWRvLW1lbnUtZW07XHJcbiAgICBoZWlnaHQ6ICgkYWRqdXN0ZWQtaGVpZ2h0ICowLjI1KTtcclxuICAgIGJvcmRlci10b3A6ICgkYWRqdXN0ZWQtaGVpZ2h0ICowLjc1KSBkb3VibGUgJGNvbG9yLW1lbnUtYmFyO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogKCRhZGp1c3RlZC1oZWlnaHQgKjAuMjUpIHNvbGlkICRjb2xvci1tZW51LWJhcjtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBkYXJrZW5lZC1vdmVybGF5LWJlZm9yZSgkYmctcHJvcGVydHk6IHJnYmEoMCwwLDAsMC41KSkge1xyXG4gICRiZy1wcm9wZXJ0eS10eXBlOiB0eXBlX29mKCRiZy1wcm9wZXJ0eSk7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAmOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgQGlmICgkYmctcHJvcGVydHktdHlwZSA9PSAnY29sb3InKSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRiZy1wcm9wZXJ0eTtcclxuICAgIH1cclxuICAgIEBlbHNlIGlmICgkYmctcHJvcGVydHktdHlwZSA9PSAnY29tcGFzczo6Y29yZTo6c2Fzc2V4dGVuc2lvbnM6OmZ1bmN0aW9uczo6Z3JhZGllbnRzdXBwb3J0OjpsaW5lYXJncmFkaWVudCcpIHtcclxuICAgICAgQGluY2x1ZGUgYmFja2dyb3VuZC1pbWFnZS1zdXBwb3J0KCRiZy1wcm9wZXJ0eSk7XHJcbiAgICB9XHJcbiAgICBAZWxzZSBpZiAoJGJnLXByb3BlcnR5LXR5cGUgPT0gJ2xpc3QnKXtcclxuICAgICAgQGluY2x1ZGUgYmFja2dyb3VuZCgkYmctcHJvcGVydHkpO1xyXG4gICAgfVxyXG4gICAgQGVsc2Uge1xyXG4gICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kKCRiZy1wcm9wZXJ0eSk7XHJcbiAgICB9XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxuXHJcbiAgPiAqIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBkYXJrZW5lZC1vdmVybGF5LWFmdGVyKCRiZy1wcm9wZXJ0eTogcmdiYSgwLDAsMCwwLjUpKSB7XHJcbiAgJGJnLXByb3BlcnR5LXR5cGU6IHR5cGVfb2YoJGJnLXByb3BlcnR5KTtcclxuXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCIjeyRiZy1wcm9wZXJ0eS10eXBlfVwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgQGlmICgkYmctcHJvcGVydHktdHlwZSA9PSAnY29sb3InKSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRiZy1wcm9wZXJ0eTtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kKCRiZy1wcm9wZXJ0eSk7XHJcbiAgICAgIC8vVE9ETyBjbGVhbiB1cCBmYWxsYmFjayBtZXRob2QgZm9yIHdoZW4gYmFja2dyb3VuZCBpcyBub3QgYSBncmFkaWVudC9pbWFnZVxyXG4gICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWltYWdlLXN1cHBvcnQoJGJnLXByb3BlcnR5KTtcclxuICAgIH1cclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICA+ICoge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGNlbnRlcmVkLWJsb2NrKCRtYXgtd2lkdGg6IGF1dG8pIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87O1xyXG4gIEBpZiAoJG1heC13aWR0aCAhPSBhdXRvKSB7XHJcbiAgICBtYXgtd2lkdGg6ICRtYXgtd2lkdGg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBjZW50ZXJlZC1zcGFjZWQtYmxvY2soJG1hcmdpbi12ZXJ0aWNhbDogMCwgJG1heC13aWR0aDogOTYwcHgpIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW46ICRtYXJnaW4tdmVydGljYWwgYXV0bztcclxuICBtYXgtd2lkdGg6ICRtYXgtd2lkdGg7XHJcbn1cclxuXHJcbkBtaXhpbiBjb250YWluZXItdi1hbGlnbi1taWRkbGUoJHNlbGVjdG9yOiBcInYtYWxpZ24tY29udGVudFwiLCAkdmFsaWduOiBtaWRkbGUpIHtcclxuICBkaXNwbGF5OiB0YWJsZTtcclxuICB3aWR0aDogMTAwJTtcclxuXHJcbiAgI3skc2VsZWN0b3J9IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogJHZhbGlnbjtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBpbWFnZS1wbGFjZWhvbGRlcigkc2l6ZTogY292ZXIsICRiYWNrZ3JvdW5kLWltYWdlOiBmYWxzZSkge1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogJHNpemU7XHJcbiAgQGlmICgkYmFja2dyb3VuZC1pbWFnZSkge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogJGJhY2tncm91bmQtaW1hZ2U7XHJcbiAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLWltYWdlLXN1cHBvcnQoJGJhY2tncm91bmQtaW1hZ2UpO1xyXG4gIH1cclxuICBAY29udGVudFxyXG59XHJcblxyXG5AbWl4aW4gbm9mbGV4KCRpbnRlcm1lZGlhdGUtc2VsZWN0b3I6ICcnKSB7XHJcbiAgQGF0LXJvb3QgaHRtbC5uby1mbGV4Ym94ICN7JGludGVybWVkaWF0ZS1zZWxlY3Rvcn0gJiB7XHJcbiAgICBAY29udGVudFxyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGlubGluZS1ibG9jay1pbWcoJGhlaWdodC1wZXJjZW50YWdlOiAxMDAlKSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgaGVpZ2h0OiAwO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmctYm90dG9tOiAkaGVpZ2h0LXBlcmNlbnRhZ2U7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5cclxuQG1peGluIGN1dC1vdXRlci1wYXJhZ3JhcGgtbWFyZ2luIHtcclxuXHJcbiAgcCB7XHJcblxyXG4gICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG5AbWl4aW4gY3V0LW91dGVyLW1hcmdpbigpIHtcclxuXHJcbiAgJiB7XHJcblxyXG4gICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBjdXQtb3V0ZXItdHlwZS1tYXJnaW4oKSB7XHJcblxyXG4gICYge1xyXG5cclxuICAgICY6Zmlyc3Qtb2YtdHlwZSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGN1dC1vdXRlci1wYWRkaW5nKCkge1xyXG5cclxuICAmIHtcclxuXHJcbiAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gY3V0LW91dGVyLXR5cGUtcGFkZGluZygpIHtcclxuXHJcbiAgJiB7XHJcblxyXG4gICAgJjpmaXJzdC1vZi10eXBlIHtcclxuICAgICAgcGFkZGluZy10b3A6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJjpsYXN0LW9mLXR5cGUge1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBjdXN0b20taGVhZGluZy1zaXplKCRiYXNlLWhlYWRpbmc6IGgzLCAkYWRqdXN0ZWQtZm9udC1zaXplOiA0MCkge1xyXG4gICRoZWFkaW5nczogKGgxOiAyLCBoMjogMS41LCBoMzogMS4xNywgaDQ6IDEuMTIsIGg1OiAuODMsIGg2OiAuNzUpO1xyXG4gICRyYXRpbzogKGVtLXNhbnMoJGFkanVzdGVkLWZvbnQtc2l6ZSkvIG1hcF9nZXQoJGhlYWRpbmdzLCAkYmFzZS1oZWFkaW5nKSk7XHJcbiAgQGVhY2ggJGhlYWRpbmctc2l6ZSwgJGZvbnQtc2l6ZSBpbiAkaGVhZGluZ3Mge1xyXG4gICAgI3skaGVhZGluZy1zaXplfSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMWVtICogICRyYXRpbyAqIG1hcF9nZXQoJGhlYWRpbmdzLCAkaGVhZGluZy1zaXplKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhbGwtaGVhZGluZ3Mge1xyXG5cclxuICBoMSxcclxuICBoMixcclxuICBoMyxcclxuICBoNCxcclxuICBoNSxcclxuICBoNiB7XHJcbiAgICBAY29udGVudFxyXG4gIH1cclxufVxyXG5cclxuQG1peGluIHBsYWNlaG9sZGVyIHtcclxuICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxuXHJcbiAgJjotbW96LXBsYWNlaG9sZGVyIHsgLyogRmlyZWZveCAxOC0gKi9cclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxuXHJcbiAgJjo6LW1vei1wbGFjZWhvbGRlciB7ICAvKiBGaXJlZm94IDE5KyAqL1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBpbnB1dC1wbGFjZWhvbGRlcntcclxuICBAaW5jbHVkZSBwbGFjZWhvbGRlcntcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIGluc2VydC1iZWZvcmUoJGJhc2UsICRpbnNlcnRpb24tcG9pbnQsICRhZGRpdGlvbjogICcuYmFjayA+ICcpIHtcclxuICAkZm9ybWF0dGVkLWJhc2U6ICN7JGJhc2V9O1xyXG4gIEBhdC1yb290ICN7c3RyLWluc2VydCgkZm9ybWF0dGVkLWJhc2UsICRhZGRpdGlvbiwgc3RyLWluZGV4KCRmb3JtYXR0ZWQtYmFzZSwgJGluc2VydGlvbi1wb2ludCkpfXtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIHBldC1waG90byB7XHJcbiAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cyg1MCUpO1xyXG4gIEBpbmNsdWRlIGltYWdlLXBsYWNlaG9sZGVyKGNvdmVyLCAkdXJsLTk2MCk7XHJcbiAgQGluY2x1ZGUgaW5saW5lLWJsb2NrLWltZygxMDAlKTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59IiwiXHJcbiRicmVha3BvaW50LW1vYmlsZS1weC1zYW5zOiA3Njg7XHJcbiRicmVha3BvaW50LW1vYmlsZTogJGJyZWFrcG9pbnQtbW9iaWxlLXB4LXNhbnMgKiAxcHg7XHJcbiRicmVha3BvaW50LXRhYmxldC1weC1zYW5zOiAxMDI0O1xyXG4kYnJlYWtwb2ludC10YWJsZXQ6ICRicmVha3BvaW50LXRhYmxldC1weC1zYW5zICogMXB4O1xyXG4kYnJlYWtwb2ludC1mb250LXJlZHVjdGlvbi1weC1zYW5zOiAxMDgwO1xyXG4kYnJlYWtwb2ludC1mb250LXJlZHVjdGlvbjogJGJyZWFrcG9pbnQtZm9udC1yZWR1Y3Rpb24tcHgtc2FucyAqIDFweDtcclxuXHJcbiRjb2xvci13aGl0ZTogI2ZmZjtcclxuJGNvbG9yLWJsYWNrOiAjMDAwO1xyXG4kY29sb3ItZ3JleTogIzgyODI4MjtcclxuJGNvbG9yLWRhcmstZ3JleTogIzMyMzIzMjtcclxuJGNvbG9yLWxpZ2h0LWdyZXk6ICNkOGQ4ZDg7XHJcbiRjb2xvci1wb3dlcmVkLWhvdmVyOiNiYzZjNTA7XHJcblxyXG4kZm9udC1zaXplLWJvZHktZGVmYXVsdC1weC1zYW5zOiAxNjtcclxuJGZvbnQtc2l6ZS1ib2R5LWRlZmF1bHQtcHg6ICRmb250LXNpemUtYm9keS1kZWZhdWx0LXB4LXNhbnMgK3B4O1xyXG5cclxuXHJcbiRkdXJhdGlvbi10cmFuc2l0aW9uLWRlZmF1bHQtbXM6IDQwMG1zO1xyXG4kZHVyYXRpb24tdHJhbnNpdGlvbi1kZWZhdWx0OiAkZHVyYXRpb24tdHJhbnNpdGlvbi1kZWZhdWx0LW1zO1xyXG4kZHVyYXRpb24tdHJhbnNpdGlvbi1kcC1tczogMjUwbXM7XHJcbiRkdXJhdGlvbi10cmFuc2l0aW9uLWxvbmctbXM6IDEwMDBtcztcclxuJGR1cmF0aW9uLXRyYW5zaXRpb24tc2hvcnQtbXM6IDI1MG1zO1xyXG5cclxuJGhlaWdodC1oZWFkZXItbWVudS1weC1zYW5zOiAxNTA7XHJcblxyXG4kbWF4LXdpZHRoLXBhZ2UtY29udGVudC1weC1zYW5zOiAxMDI0O1xyXG5cclxuJG1lZGlhLW1vYmlsZTogJyhtYXgtd2lkdGg6JyskYnJlYWtwb2ludC1tb2JpbGUrXCIpXCI7XHJcbiRtZWRpYS1sYXJnZXItdGhhbi1tb2JpbGU6ICcobWluLXdpZHRoOicrJGJyZWFrcG9pbnQtbW9iaWxlKycpJztcclxuJG1lZGlhLXRhYmxldDogJyhtaW4td2lkdGg6JyskYnJlYWtwb2ludC1tb2JpbGUrJykgKyAobWF4LXdpZHRoOicrJGJyZWFrcG9pbnQtdGFibGV0K1wiKVwiO1xyXG4kbWVkaWEtbGFyZ2VyLXRoYW4tdGFibGV0OiAnKG1pbi13aWR0aDonKyRicmVha3BvaW50LXRhYmxldCsnKSc7XHJcbiRtZWRpYS1mb250LXJlZHVjdGlvbjogJyhtYXgtd2lkdGg6JyskYnJlYWtwb2ludC1mb250LXJlZHVjdGlvbisnKSc7XHJcblxyXG4kcmF0aW8tZm9udC1yZWR1Y3Rpb246IC43O1xyXG5cclxuJHRpbWluZy10cmFuc2l0aW9uLWRwOiBjdWJpYy1iZXppZXIoMC41MiwgLTAuMDMsIDAuNTEsIDEuNDE1KTtcclxuJHRpbWluZy10cmFuc2l0aW9uLWRlZmF1bHQ6IGVhc2U7XHJcblxyXG4kdXJsLTUwMDogdXJsKCdodHRwOi8vcGxhY2Vob2xkLml0LzUwMHg1MDAnKTtcclxuJHVybC0xOTIwOiB1cmwoJ2h0dHA6Ly9wbGFjZWhvbGQuaXQvMTkyMHgxMDgwJyk7XHJcbiR1cmwtOTYwOiB1cmwoJ2h0dHA6Ly9wbGFjZWhvbGQuaXQvOTYweDk2MCcpO1xyXG5cclxuJGNoYXItaWNvbi1lbWFpbDogJ1xcZTgwMCc7XHJcbiRjaGFyLWljb24tZGVmYXVsdDogJGNoYXItaWNvbi1lbWFpbDsiLCIvKlx0PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblx0UGV0IExpc3QgVmlld1xuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAgKi9cblxuLndyYXAtc2VhcmNoLXJlc3VsdHMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59IiwiLypcdD09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cdFNlYXJjaFxuXHQ9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAgKi9cbiRwYWRkaW5nLWlucHV0LWZpZWxkcy1weC1zYW5zOiAxMjtcbi5jb250YWluZXItc2VhcmNoIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG5cbiAgJixcbiAgKiB7XG4gICAgQGluY2x1ZGUgYm94LXNpemluZyhib3JkZXItYm94KTtcbiAgfVxuXG4gICYjY29udGFpbmVyLXNlYXJjaCB7XG5cbiAgfVxuXG4gIC53cmFwLXNlYXJjaC1oZWFkaW5nIHtcblxuICB9XG4gIC5zZWFyY2gtaGVhZGluZyB7XG5cbiAgfVxuICAud3JhcC1zZWFyY2gtcHJldmlldyB7XG5cbiAgfVxuICAuc2VhcmNoLXByZXZpZXcge1xuXG4gIH1cbiAgLndyYXAtc2VhcmNoLWN0YSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWdyZXk7XG4gICAgcGFkZGluZzogZW0oJHBhZGRpbmctaW5wdXQtZmllbGRzLXB4LXNhbnMpICgxMDAlICogMjQvMTI4MCk7XG4gIH1cbiAgLnNlYXJjaC1jdGEge1xuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIC53cmFwLXNlYXJjaCB7XG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWRhcmstZ3JleTtcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xuICB9XG4gIC53cmFwLWltYWdlLFxuICAud3JhcC1pbnN0cnVjdGlvbnMsXG4gIC53cmFwLXNlYXJjaC1maWVsZHMge1xuICAgIEBpbmNsdWRlIGlubGluZS1ibG9jaygpO1xuICAgIC8vcGFkZGluZzogMS41ZW0gKDEwMCUgKiAyNC8xMjgwKTtcbiAgICBwYWRkaW5nOiAxLjVlbSAoMTAwJSAqIDI0LzEyODApO1xuICAgIHdpZHRoOiAoMTAwJSAvIDMpO1xuICB9XG4gIC53cmFwLWltYWdlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLmltYWdlIHtcbiAgICBAaW5jbHVkZSBwZXQtcGhvdG8oKTtcbiAgfVxuICAud3JhcC1pbnN0cnVjdGlvbnMge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuXG4gICAgaDUge1xuICAgICAgbWFyZ2luOiAwIGF1dG8gLjVlbTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gIH1cbiAgLnNlYXJjaCB7XG4gICAgQGluY2x1ZGUgaW5saW5lLWJsb2NrKCk7XG4gIH1cbiAgLndyYXAtc2VhcmNoLWZpZWxkcyB7XG5cbiAgfVxuICAuc2VhcmNoLWZpZWxkcyB7XG5cbiAgfVxuICAud3JhcC1hZHZhbmNlZC1vcHRpb25zIHtcblxuICB9XG4gIC5hZHZhbmNlZC1vcHRpb25zIHtcblxuICB9XG4gIC53cmFwLWFkdmFuY2VkLW9wdGlvbnMtdG9nZ2xlIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogZW0oJHBhZGRpbmctaW5wdXQtZmllbGRzLXB4LXNhbnMpO1xuXG4gIH1cbiAgLmFkdmFuY2VkLW9wdGlvbnMtdG9nZ2xlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZ3JleTtcbiAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IGVtKDEyKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgLndyYXAtYWR2YW5jZS1vcHRpb25zLXZpZXcge1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tcHJvcGVydHkobWF4LWhlaWdodCk7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1kdXJhdGlvbigkZHVyYXRpb24tdHJhbnNpdGlvbi1kZWZhdWx0LW1zKTtcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbigkdGltaW5nLXRyYW5zaXRpb24tZGVmYXVsdCk7XG4gICAgbWF4LWhlaWdodDogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG4gIC5hZHZhbmNlZC1vcHRpb25zLXZpZXcge1xuICAgIHBhZGRpbmctYm90dG9tOiBlbSgkcGFkZGluZy1pbnB1dC1maWVsZHMtcHgtc2Fucyk7XG4gIH1cblxuICAud3JhcC1pbnB1dCB7XG4gICAgcGFkZGluZy1ib3R0b206IGVtKCRwYWRkaW5nLWlucHV0LWZpZWxkcy1weC1zYW5zKTtcbiAgICBAaW5jbHVkZSBjdXQtb3V0ZXItcGFkZGluZygpO1xuICB9XG5cbiAgc2VsZWN0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgYm9yZGVyOiAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IGVtKCRwYWRkaW5nLWlucHV0LWZpZWxkcy1weC1zYW5zKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBvcHRpb24ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC53cmFwLXNlYXJjaC1zdWJtaXQge1xuXG4gIH1cbiAgLndyYXAtc2VhcmNoLXJlc3VsdHMge1xuICB9XG5cbiAgaW5wdXRbdHlwZT0nc3VibWl0J117XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLWdyZXk7XG4gICAgcGFkZGluZzogZW0oJHBhZGRpbmctaW5wdXQtZmllbGRzLXB4LXNhbnMpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5zZWFyY2gtcmVzdWx0cyB7XG5cbiAgfVxuXG4gICYuYWR2YW5jZWQtdmlldyB7XG4gICAgLndyYXAtYWR2YW5jZS1vcHRpb25zLXZpZXcge1xuICAgICAgbWF4LWhlaWdodDogZW0oNzIwKTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuICB9XG4gIFxuICBAbWVkaWEgI3skbWVkaWEtbW9iaWxlfSB7XG5cbiAgICAud3JhcC1pbWFnZSxcbiAgICAud3JhcC1pbnN0cnVjdGlvbnMsXG4gICAgLndyYXAtc2VhcmNoLWZpZWxkcyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmc6IC43NWVtIDEuNWVtO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLndyYXAtaW1hZ2Uge1xuICAgICAgcGFkZGluZy10b3A6IDEuNWVtO1xuICAgIH1cblxuICAgIC53cmFwLXNlYXJjaC1maWVsZHMge1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gIH1cbn1cbiIsIkBpbXBvcnQgXCJzaGFyZWRcIjtcblxuLy8gQ2hhbmdlIHRoZSBib3ggbW9kZWwgZm9yIE1vemlsbGEsIFdlYmtpdCwgSUU4IGFuZCB0aGUgZnV0dXJlXG4vL1xuLy8gQHBhcmFtICRic1xuLy8gICBbIGNvbnRlbnQtYm94IHwgYm9yZGVyLWJveCBdXG5cbkBtaXhpbiBib3gtc2l6aW5nKCRicykge1xuICAkYnM6IHVucXVvdGUoJGJzKTtcbiAgQGluY2x1ZGUgZXhwZXJpbWVudGFsKGJveC1zaXppbmcsICRicyxcbiAgICAtbW96LCAtd2Via2l0LCBub3QoLW8pLCBub3QoLW1zKSwgbm90KC1raHRtbCksIG9mZmljaWFsXG4gICk7XG59XG4iLCJAaW1wb3J0IFwic2hhcmVkXCI7XG5cbi8vIENTUyBUcmFuc2l0aW9uc1xuLy8gQ3VycmVudGx5IG9ubHkgd29ya3MgaW4gV2Via2l0LlxuLy9cbi8vICogZXhwZWN0ZWQgaW4gQ1NTMywgRmlyZUZveCAzLjYvNyBhbmQgT3BlcmEgUHJlc3RvIDIuM1xuLy8gKiBXZSdsbCBiZSBwcmVwYXJlZC5cbi8vXG4vLyBJbmNsdWRpbmcgdGhpcyBzdWJtb2R1bGUgc2V0cyBmb2xsb3dpbmcgZGVmYXVsdHMgZm9yIHRoZSBtaXhpbnM6XG4vL1xuLy8gICAgICRkZWZhdWx0LXRyYW5zaXRpb24tcHJvcGVydHkgOiBhbGxcbi8vICAgICAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uIDogMXNcbi8vICAgICAkZGVmYXVsdC10cmFuc2l0aW9uLWZ1bmN0aW9uIDogZmFsc2Vcbi8vICAgICAkZGVmYXVsdC10cmFuc2l0aW9uLWRlbGF5ICAgIDogZmFsc2Vcbi8vXG4vLyBPdmVycmlkZSB0aGVtIGlmIHlvdSBsaWtlLiBUaW1pbmctZnVuY3Rpb24gYW5kIGRlbGF5IGFyZSBzZXQgdG8gZmFsc2UgZm9yIGJyb3dzZXIgZGVmYXVsdHMgKGVhc2UsIDBzKS5cblxuJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsICFkZWZhdWx0O1xuXG4kZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAxcyAhZGVmYXVsdDtcblxuJGRlZmF1bHQtdHJhbnNpdGlvbi1mdW5jdGlvbjogZmFsc2UgIWRlZmF1bHQ7XG5cbiRkZWZhdWx0LXRyYW5zaXRpb24tZGVsYXk6IGZhbHNlICFkZWZhdWx0O1xuXG4kdHJhbnNpdGlvbmFibGUtcHJlZml4ZWQtdmFsdWVzOiB0cmFuc2Zvcm0sIHRyYW5zZm9ybS1vcmlnaW4gIWRlZmF1bHQ7XG5cbi8vIE9uZSBvciBtb3JlIHByb3BlcnRpZXMgdG8gdHJhbnNpdGlvblxuLy9cbi8vICogZm9yIG11bHRpcGxlLCB1c2UgYSBjb21tYS1kZWxpbWl0ZWQgbGlzdFxuLy8gKiBhbHNvIGFjY2VwdHMgXCJhbGxcIiBvciBcIm5vbmVcIlxuXG5AbWl4aW4gdHJhbnNpdGlvbi1wcm9wZXJ0eSgkcHJvcGVydHktMTogJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSxcbiAgJHByb3BlcnR5LTIgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTMgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTQgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTUgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTYgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTcgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTggOiBmYWxzZSxcbiAgJHByb3BlcnR5LTkgOiBmYWxzZSxcbiAgJHByb3BlcnR5LTEwOiBmYWxzZVxuKSB7XG4gIEBpZiB0eXBlLW9mKCRwcm9wZXJ0eS0xKSA9PSBzdHJpbmcgeyAkcHJvcGVydHktMTogdW5xdW90ZSgkcHJvcGVydHktMSk7IH1cbiAgJHByb3BlcnRpZXM6IGNvbXBhY3QoJHByb3BlcnR5LTEsICRwcm9wZXJ0eS0yLCAkcHJvcGVydHktMywgJHByb3BlcnR5LTQsICRwcm9wZXJ0eS01LCAkcHJvcGVydHktNiwgJHByb3BlcnR5LTcsICRwcm9wZXJ0eS04LCAkcHJvcGVydHktOSwgJHByb3BlcnR5LTEwKTtcbiAgQGlmICRleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itd2Via2l0ICAgIHsgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5IDogcHJlZml4ZWQtZm9yLXRyYW5zaXRpb24oLXdlYmtpdCwgJHByb3BlcnRpZXMpOyB9XG4gIEBpZiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW1vemlsbGEgICB7ICAgICAgICAgIC1tb3otdHJhbnNpdGlvbi1wcm9wZXJ0eSA6IHByZWZpeGVkLWZvci10cmFuc2l0aW9uKC1tb3osICAgICRwcm9wZXJ0aWVzKTsgfVxuICBAaWYgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1vcGVyYSAgICAgeyAgICAgICAgICAgIC1vLXRyYW5zaXRpb24tcHJvcGVydHkgOiBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigtbywgICAgICAkcHJvcGVydGllcyk7IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uLXByb3BlcnR5IDogJHByb3BlcnRpZXM7XG59XG5cbi8vIE9uZSBvciBtb3JlIGR1cmF0aW9ucyBpbiBzZWNvbmRzXG4vL1xuLy8gKiBmb3IgbXVsdGlwbGUsIHVzZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0XG4vLyAqIHRoZXNlIGR1cmF0aW9ucyB3aWxsIGFmZmVjdCB0aGUgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBsaXN0IHBvc2l0aW9uXG5cbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCRkdXJhdGlvbi0xOiAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uLFxuICAkZHVyYXRpb24tMiA6IGZhbHNlLFxuICAkZHVyYXRpb24tMyA6IGZhbHNlLFxuICAkZHVyYXRpb24tNCA6IGZhbHNlLFxuICAkZHVyYXRpb24tNSA6IGZhbHNlLFxuICAkZHVyYXRpb24tNiA6IGZhbHNlLFxuICAkZHVyYXRpb24tNyA6IGZhbHNlLFxuICAkZHVyYXRpb24tOCA6IGZhbHNlLFxuICAkZHVyYXRpb24tOSA6IGZhbHNlLFxuICAkZHVyYXRpb24tMTA6IGZhbHNlXG4pIHtcbiAgQGlmIHR5cGUtb2YoJGR1cmF0aW9uLTEpID09IHN0cmluZyB7ICRkdXJhdGlvbi0xOiB1bnF1b3RlKCRkdXJhdGlvbi0xKTsgfVxuICAkZHVyYXRpb25zOiBjb21wYWN0KCRkdXJhdGlvbi0xLCAkZHVyYXRpb24tMiwgJGR1cmF0aW9uLTMsICRkdXJhdGlvbi00LCAkZHVyYXRpb24tNSwgJGR1cmF0aW9uLTYsICRkdXJhdGlvbi03LCAkZHVyYXRpb24tOCwgJGR1cmF0aW9uLTksICRkdXJhdGlvbi0xMCk7XG4gIEBpbmNsdWRlIGV4cGVyaW1lbnRhbCh0cmFuc2l0aW9uLWR1cmF0aW9uLCAkZHVyYXRpb25zLFxuICAgIC1tb3osIC13ZWJraXQsIC1vLCBub3QoLW1zKSwgbm90KC1raHRtbCksIG9mZmljaWFsXG4gICk7XG59XG5cbi8vIE9uZSBvciBtb3JlIHRpbWluZyBmdW5jdGlvbnNcbi8vXG4vLyAqIFsgZWFzZSB8IGxpbmVhciB8IGVhc2UtaW4gfCBlYXNlLW91dCB8IGVhc2UtaW4tb3V0IHwgY3ViaWMtYmV6aWVyKHgxLCB5MSwgeDIsIHkyKV1cbi8vICogRm9yIG11bHRpcGxlLCB1c2UgYSBjb21tYS1kZWxpbWl0ZWQgbGlzdFxuLy8gKiBUaGVzZSBmdW5jdGlvbnMgd2lsbCBlZmZlY3QgdGhlIHByb3BlcnRpZXMgaW4gdGhlIHNhbWUgbGlzdCBwb3NpdGlvblxuXG5AbWl4aW4gdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb24oJGZ1bmN0aW9uLTE6ICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24sXG4gICRmdW5jdGlvbi0yIDogZmFsc2UsXG4gICRmdW5jdGlvbi0zIDogZmFsc2UsXG4gICRmdW5jdGlvbi00IDogZmFsc2UsXG4gICRmdW5jdGlvbi01IDogZmFsc2UsXG4gICRmdW5jdGlvbi02IDogZmFsc2UsXG4gICRmdW5jdGlvbi03IDogZmFsc2UsXG4gICRmdW5jdGlvbi04IDogZmFsc2UsXG4gICRmdW5jdGlvbi05IDogZmFsc2UsXG4gICRmdW5jdGlvbi0xMDogZmFsc2Vcbikge1xuICAkZnVuY3Rpb24tMTogdW5xdW90ZSgkZnVuY3Rpb24tMSk7XG4gICRmdW5jdGlvbnM6IGNvbXBhY3QoJGZ1bmN0aW9uLTEsICRmdW5jdGlvbi0yLCAkZnVuY3Rpb24tMywgJGZ1bmN0aW9uLTQsICRmdW5jdGlvbi01LCAkZnVuY3Rpb24tNiwgJGZ1bmN0aW9uLTcsICRmdW5jdGlvbi04LCAkZnVuY3Rpb24tOSwgJGZ1bmN0aW9uLTEwKTtcbiAgQGluY2x1ZGUgZXhwZXJpbWVudGFsKHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uLCAkZnVuY3Rpb25zLFxuICAgIC1tb3osIC13ZWJraXQsIC1vLCBub3QoLW1zKSwgbm90KC1raHRtbCksIG9mZmljaWFsXG4gICk7XG59XG5cbi8vIE9uZSBvciBtb3JlIHRyYW5zaXRpb24tZGVsYXlzIGluIHNlY29uZHNcbi8vXG4vLyAqIGZvciBtdWx0aXBsZSwgdXNlIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Rcbi8vICogdGhlc2UgZGVsYXlzIHdpbGwgZWZmZWN0IHRoZSBwcm9wZXJ0aWVzIGluIHRoZSBzYW1lIGxpc3QgcG9zaXRpb25cblxuQG1peGluIHRyYW5zaXRpb24tZGVsYXkoJGRlbGF5LTE6ICRkZWZhdWx0LXRyYW5zaXRpb24tZGVsYXksXG4gICRkZWxheS0yIDogZmFsc2UsXG4gICRkZWxheS0zIDogZmFsc2UsXG4gICRkZWxheS00IDogZmFsc2UsXG4gICRkZWxheS01IDogZmFsc2UsXG4gICRkZWxheS02IDogZmFsc2UsXG4gICRkZWxheS03IDogZmFsc2UsXG4gICRkZWxheS04IDogZmFsc2UsXG4gICRkZWxheS05IDogZmFsc2UsXG4gICRkZWxheS0xMDogZmFsc2Vcbikge1xuICBAaWYgdHlwZS1vZigkZGVsYXktMSkgPT0gc3RyaW5nIHsgJGRlbGF5LTE6IHVucXVvdGUoJGRlbGF5LTEpOyB9XG4gICRkZWxheXM6IGNvbXBhY3QoJGRlbGF5LTEsICRkZWxheS0yLCAkZGVsYXktMywgJGRlbGF5LTQsICRkZWxheS01LCAkZGVsYXktNiwgJGRlbGF5LTcsICRkZWxheS04LCAkZGVsYXktOSwgJGRlbGF5LTEwKTtcbiAgQGluY2x1ZGUgZXhwZXJpbWVudGFsKHRyYW5zaXRpb24tZGVsYXksICRkZWxheXMsXG4gICAgLW1veiwgLXdlYmtpdCwgLW8sIG5vdCgtbXMpLCBub3QoLWtodG1sKSwgb2ZmaWNpYWxcbiAgKTtcbn1cblxuLy8gVHJhbnNpdGlvbiBhbGwtaW4tb25lIHNob3J0aGFuZFxuXG5AbWl4aW4gc2luZ2xlLXRyYW5zaXRpb24oXG4gICRwcm9wZXJ0eTogJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSxcbiAgJGR1cmF0aW9uOiAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uLFxuICAkZnVuY3Rpb246ICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24sXG4gICRkZWxheTogJGRlZmF1bHQtdHJhbnNpdGlvbi1kZWxheVxuKSB7XG4gIEBpbmNsdWRlIHRyYW5zaXRpb24oY29tcGFjdCgkcHJvcGVydHkgJGR1cmF0aW9uICRmdW5jdGlvbiAkZGVsYXkpKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24oXG4gICR0cmFuc2l0aW9uLTEgOiBkZWZhdWx0LFxuICAkdHJhbnNpdGlvbi0yIDogZmFsc2UsXG4gICR0cmFuc2l0aW9uLTMgOiBmYWxzZSxcbiAgJHRyYW5zaXRpb24tNCA6IGZhbHNlLFxuICAkdHJhbnNpdGlvbi01IDogZmFsc2UsXG4gICR0cmFuc2l0aW9uLTYgOiBmYWxzZSxcbiAgJHRyYW5zaXRpb24tNyA6IGZhbHNlLFxuICAkdHJhbnNpdGlvbi04IDogZmFsc2UsXG4gICR0cmFuc2l0aW9uLTkgOiBmYWxzZSxcbiAgJHRyYW5zaXRpb24tMTA6IGZhbHNlXG4pIHtcbiAgQGlmICR0cmFuc2l0aW9uLTEgPT0gZGVmYXVsdCB7XG4gICAgJHRyYW5zaXRpb24tMSA6IGNvbXBhY3QoJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24gJGRlZmF1bHQtdHJhbnNpdGlvbi1kZWxheSk7XG4gIH1cbiAgJHRyYW5zaXRpb25zOiBmYWxzZTtcbiAgQGlmIHR5cGUtb2YoJHRyYW5zaXRpb24tMSkgPT0gbGlzdCBhbmQgdHlwZS1vZihudGgoJHRyYW5zaXRpb24tMSwxKSkgPT0gbGlzdCB7XG4gICAgJHRyYW5zaXRpb25zOiBqb2luKCR0cmFuc2l0aW9uLTEsIGNvbXBhY3QoJHRyYW5zaXRpb24tMiwgJHRyYW5zaXRpb24tMywgJHRyYW5zaXRpb24tNCwgJHRyYW5zaXRpb24tNSwgJHRyYW5zaXRpb24tNiwgJHRyYW5zaXRpb24tNywgJHRyYW5zaXRpb24tOCwgJHRyYW5zaXRpb24tOSwgJHRyYW5zaXRpb24tMTApLCBjb21tYSk7XG4gIH0gQGVsc2Uge1xuICAgICR0cmFuc2l0aW9ucyA6IGNvbXBhY3QoJHRyYW5zaXRpb24tMSwgJHRyYW5zaXRpb24tMiwgJHRyYW5zaXRpb24tMywgJHRyYW5zaXRpb24tNCwgJHRyYW5zaXRpb24tNSwgJHRyYW5zaXRpb24tNiwgJHRyYW5zaXRpb24tNywgJHRyYW5zaXRpb24tOCwgJHRyYW5zaXRpb24tOSwgJHRyYW5zaXRpb24tMTApO1xuICB9XG4gICRkZWxheXM6IGNvbW1hLWxpc3QoKTtcbiAgJGhhcy1kZWxheXM6IGZhbHNlO1xuICAkd2Via2l0LXZhbHVlOiBjb21tYS1saXN0KCk7XG4gICRtb3otdmFsdWU6IGNvbW1hLWxpc3QoKTtcbiAgJG8tdmFsdWU6IGNvbW1hLWxpc3QoKTtcblxuICAvLyBUaGlzIGJsb2NrIGNhbiBiZSBtYWRlIGNvbnNpZGVyYWJseSBzaW1wbGVyIGF0IHRoZSBwb2ludCBpbiB0aW1lIHRoYXRcbiAgLy8gd2Ugbm8gbG9uZ2VyIG5lZWQgdG8gZGVhbCB3aXRoIHRoZSBkaWZmZXJlbmNlcyBpbiBob3cgZGVsYXlzIGFyZSB0cmVhdGVkLlxuICBAZWFjaCAkdHJhbnNpdGlvbiBpbiAkdHJhbnNpdGlvbnMge1xuICAgIC8vIEV4dHJhY3QgdGhlIHZhbHVlcyBmcm9tIHRoZSBsaXN0XG4gICAgLy8gKHRoaXMgd291bGQgYmUgY2xlYW5lciBpZiBudGggdG9vayBhIDNyZCBhcmd1bWVudCB0byBwcm92aWRlIGEgZGVmYXVsdCB2YWx1ZSkuXG4gICAgJHByb3BlcnR5OiBudGgoJHRyYW5zaXRpb24sIDEpO1xuICAgICRkdXJhdGlvbjogZmFsc2U7XG4gICAgJHRpbWluZy1mdW5jdGlvbjogZmFsc2U7XG4gICAgJGRlbGF5OiBmYWxzZTtcbiAgICBAaWYgbGVuZ3RoKCR0cmFuc2l0aW9uKSA+IDEgeyAkZHVyYXRpb246ICAgICAgICBudGgoJHRyYW5zaXRpb24sIDIpOyB9XG4gICAgQGlmIGxlbmd0aCgkdHJhbnNpdGlvbikgPiAyIHsgJHRpbWluZy1mdW5jdGlvbjogbnRoKCR0cmFuc2l0aW9uLCAzKTsgfVxuICAgIEBpZiBsZW5ndGgoJHRyYW5zaXRpb24pID4gMyB7ICRkZWxheTogICAgICAgICAgIG50aCgkdHJhbnNpdGlvbiwgNCk7ICRoYXMtZGVsYXlzOiB0cnVlOyB9XG5cbiAgICAvLyBJZiBhIGRlbGF5IGlzIHByb3ZpZGVkIHdpdGhvdXQgYSB0aW1pbmcgZnVuY3Rpb25cbiAgICBAaWYgaXMtdGltZSgkdGltaW5nLWZ1bmN0aW9uKSBhbmQgbm90KCRkZWxheSkgeyAkZGVsYXk6ICR0aW1pbmctZnVuY3Rpb247ICR0aW1pbmctZnVuY3Rpb246IGZhbHNlOyAkaGFzLWRlbGF5czogdHJ1ZTsgfVxuXG4gICAgLy8gS2VlcCBhIGxpc3Qgb2YgZGVsYXlzIGluIGNhc2Ugb25lIGlzIHNwZWNpZmllZFxuICAgICRkZWxheXM6IGFwcGVuZCgkZGVsYXlzLCBpZigkZGVsYXksICRkZWxheSwgMHMpKTtcblxuICAgICR3ZWJraXQtdmFsdWU6IGFwcGVuZCgkd2Via2l0LXZhbHVlLCBjb21wYWN0KHByZWZpeGVkLWZvci10cmFuc2l0aW9uKC13ZWJraXQsICRwcm9wZXJ0eSkgJGR1cmF0aW9uICR0aW1pbmctZnVuY3Rpb24pKTtcbiAgICAgICAkbW96LXZhbHVlOiBhcHBlbmQoICAgJG1vei12YWx1ZSwgY29tcGFjdChwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbiggICAtbW96LCAkcHJvcGVydHkpICRkdXJhdGlvbiAkdGltaW5nLWZ1bmN0aW9uICRkZWxheSkpO1xuICAgICAgICAgJG8tdmFsdWU6IGFwcGVuZCggICAgICRvLXZhbHVlLCBjb21wYWN0KHByZWZpeGVkLWZvci10cmFuc2l0aW9uKCAgICAgLW8sICRwcm9wZXJ0eSkgJGR1cmF0aW9uICR0aW1pbmctZnVuY3Rpb24gJGRlbGF5KSk7XG4gIH1cblxuICBAaWYgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci13ZWJraXQgICAgeyAgICAgICAtd2Via2l0LXRyYW5zaXRpb24gOiAkd2Via2l0LXZhbHVlO1xuICAgIC8vIG9sZCB3ZWJraXQgZG9lc24ndCBzdXBwb3J0IHRoZSBkZWxheSBwYXJhbWV0ZXIgaW4gdGhlIHNob3J0aGFuZCBzbyB3ZSBwcm9ncmVzc2l2ZWx5IGVuaGFuY2UgaXQuXG4gICAgQGlmICRoYXMtZGVsYXlzICAgICAgICAgICAgICAgICAgICAgICB7IC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheSA6ICRkZWxheXM7ICAgICAgIH0gfVxuICBAaWYgJGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1tb3ppbGxhICAgeyAgICAgICAgICAtbW96LXRyYW5zaXRpb24gOiAkbW96LXZhbHVlOyAgICB9XG4gIEBpZiAkZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW9wZXJhICAgICB7ICAgICAgICAgICAgLW8tdHJhbnNpdGlvbiA6ICRvLXZhbHVlOyAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uIDogJHRyYW5zaXRpb25zO1xufVxuXG4vLyBjb2VyY2UgYSBsaXN0IHRvIGJlIGNvbW1hIGRlbGltaXRlZCBvciBtYWtlIGEgbmV3LCBlbXB0eSBjb21tYSBkZWxpbWl0ZWQgbGlzdC5cbkBmdW5jdGlvbiBjb21tYS1saXN0KCRsaXN0OiAoKSkge1xuICBAcmV0dXJuIGpvaW4oKCksICRsaXN0LCBjb21tYSk7XG59XG5cbi8vIFJldHVybnMgYCRwcm9wZXJ0eWAgd2l0aCB0aGUgZ2l2ZW4gcHJlZml4IGlmIGl0IGlzIGZvdW5kIGluIGAkdHJhbnNpdGlvbmFibGUtcHJlZml4ZWQtdmFsdWVzYC5cbkBmdW5jdGlvbiBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigkcHJlZml4LCAkcHJvcGVydHkpIHtcbiAgQGlmIHR5cGUtb2YoJHByb3BlcnR5KSA9PSBsaXN0IHtcbiAgICAkbmV3LWxpc3Q6IGNvbW1hLWxpc3QoKTtcbiAgICBAZWFjaCAkdiBpbiAkcHJvcGVydHkge1xuICAgICAgJG5ldy1saXN0OiBhcHBlbmQoJG5ldy1saXN0LCBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigkcHJlZml4LCAkdikpO1xuICAgIH1cbiAgICBAcmV0dXJuICRuZXctbGlzdDtcbiAgfSBAZWxzZSB7XG4gICAgQGlmIGluZGV4KCR0cmFuc2l0aW9uYWJsZS1wcmVmaXhlZC12YWx1ZXMsICRwcm9wZXJ0eSkge1xuICAgICAgQHJldHVybiAjeyRwcmVmaXh9LSN7JHByb3BlcnR5fTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIEByZXR1cm4gJHByb3BlcnR5O1xuICAgIH1cbiAgfVxufVxuXG4vLyBDaGVja3MgaWYgdGhlIHZhbHVlIGdpdmVuIGlzIGEgdW5pdCBvZiB0aW1lLlxuQGZ1bmN0aW9uIGlzLXRpbWUoJHZhbHVlKSB7XG4gIEBpZiB0eXBlLW9mKCR2YWx1ZSkgPT0gbnVtYmVyIHtcbiAgICBAcmV0dXJuIG5vdChub3QoaW5kZXgocyBtcywgdW5pdCgkdmFsdWUpKSkpO1xuICB9IEBlbHNlIHtcbiAgICBAcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
